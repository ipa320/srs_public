void generalPurposeProjection_fp(
		float4 texCoord		: TEXCOORD0,
		float4 inColor		: COLOR,
		out float4 outCol	: COLOR,
		uniform sampler2D texMap)
{
	
	if( texCoord.w < 0.0 )
		outCol = float4(0.0, 0.0, 0.0, 0.0 );
	else
		outCol = tex2Dproj(texMap, texCoord);
}

void testedProjection_fp(
		float4 texCoord		: TEXCOORD0,
		float4 cam_z	 	: TEXCOORD1,
		float4 inColor		: COLOR,
		out float4 outCol	: COLOR,
		uniform sampler2D texMap 	: TEXUNIT0,
		uniform sampler2D depthMap 	: TEXUNIT1, 
		uniform float testedDistance
)
{
	// Test if texture coordinate lays in the texture bounds
	if( texCoord[0]/texCoord[3] < 0.0 || texCoord[0]/texCoord[3] >= 1.0 || texCoord[1]/texCoord[3] < 0.0 || texCoord[1]/texCoord[3] >= 1.0 )
	{
		outCol = inColor;
		return;
	}

	// Get projected depth
	float4 proj_depth = tex2Dproj( depthMap, texCoord );
	float proj_z = proj_depth[2];
	
	// Get color
	float4 col_tex = tex2Dproj( texMap, texCoord );

/*	
	float tested = frag_z - cam_z;
	
	if( tested < 0 )
		outCol = float4( 1.0, 0.0, 0.0, 1.0 );
	else 
	{
		if( tested < 1.0 )
		{
			float diff = abs( cam_z - frag_z );
			 
			if( diff < 0.20 )
				outCol = float4( 1.0, 0.0, 1.0, 1.0 );
			else		
				outCol = float4( 0.0, 1.0, 0.0, 1.0 );	
		}
		else 
			outCol = float4( 0.0, 0.0, 1.0, 1.0 );
	}	
*/

	float v = testedDistance * ( proj_z - cam_z[0] );
	if( (abs( proj_z - cam_z[1] ) < testedDistance)  && cam_z[1] > 0)
		outCol = col_tex;
	else
		outCol = inColor;
/*
	if( v < 0.0 )
		outCol = float4( -v, 0.0, 0.0, 1.0 );
	else		
		outCol = float4( 0.0, v, 0.0, 1.0 );
*/		
}