/******************************************************************************
 *	Depth buffer rendering - fragment shader.
 */

void casterFP(
   float2 depth      : TEXCOORD0,
   out float4 result : COLOR)
   
{
   // Draw nearer parts with lighter color
   float finalDepth = 1.0 - depth.x;
   
   // All done
   result = float4(finalDepth, finalDepth, finalDepth, 1);
}



/******************************************************************************
 * Copy color shader
 */
struct copyFP_Output {

  float4 color : COLOR;

};

copyFP_Output copyFP(float4 color : COLOR)

{

  copyFP_Output OUT;

  OUT.color = color;

  return OUT;

}

/*******************************************************************************
 *	Combine two inputs
 */

void combineColorFS(
					float2	texCoord : TEXCOORD0,
					uniform sampler input1 : register(s0),
					uniform sampler input2 : register(s1),
					out float4  color : COLOR
					)
{
	color = tex2D( input1, texCoord );
	
	float sum = color[0]+color[1]+color[2];
	if( sum <= 0.01  )
		color = tex2D( input2, texCoord );

}