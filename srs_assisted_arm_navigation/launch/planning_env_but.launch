<?xml version="1.0"?>
<launch>
 
  <!-- customized copy of cob_arm_navigation.launch and kinect_perception.launch from cob_arm_navigation -->
  <group>
  
    <!-- doesn't exist... -->
    <!--include file="$(find cob_arm_navigation)/launch/cob_planning_environment.launch" /-->
    
    <!--include file="$(find cob_arm_navigation)/launch/planning_environment.xml" /-->

	  <include file="$(find srs_assisted_arm_navigation)/launch/constraint_aware_kinematics.launch" />
	  <include file="$(find srs_assisted_arm_navigation)/launch/ompl_planning.launch" />
	  <!--include file="$(find cob_arm_navigation)/launch/trajectory_filter_server.xml" /-->
	  <!--include file="$(find cob_arm_navigation)/launch/move_groups.xml" /-->
	  
	  <node pkg="trajectory_filter_server" type="trajectory_filter_server" name="trajectory_filter_server">
		  <rosparam command="load" file="$(find trajectory_filter_server)/config/filters.yaml" />
		  <rosparam file="$(find cob_manipulation_config)/$(env ROBOT)/joint_limits.yaml"/>
  	</node>
	  
	  <node pkg="move_arm" type="move_arm_simple_action" name="cob_move_arm">
        <!--rosparam file="$(find cob_manipulation_config)/$(env ROBOT)/move_arm.yaml"/-->
        <param name="group" type="string" value="arm"/>
        <param name="move_arm_frequency" type="double" value="50.0"/>
        <param name="trajectory_filter_allowed_time" type="double" value="2.0"/>
        <param name="ik_allowed_time" type="double" value="2.0"/>
        <param name="publish_stats" type="bool" value="true"/>
        <param name="controller_action_name" type="string" value="/arm_controller/follow_joint_trajectory" />
        
        <remap from="arm_ik" to="/cob_arm_kinematics/get_constraint_aware_ik" />
        <!--remap from="arm_ik" to="/cob_ik_wrapper/arm/get_constraint_aware_ik"/-->
        <remap from="filter_trajectory" to="/trajectory_filter_server/filter_trajectory_with_constraints"/>
        
    </node>

	  <!--maybe needed for table_top_manipulation --> 
		<include file="$(find trajectory_filter_server)/launch/trajectory_unnormalize.launch"/>
			    
	</group>
	
	<!-- customized copy of cob_arm_navigation.launch and kinect_perception.launch from cob_arm_navigation -->
	<group>
	
	  <!--node pkg="kinect_utils" type="add_noise_pcl" name="add_noise_PCL">
	    <remap from="/camera/depth/points" to="/cam3d/depth/points"/>
	    <remap from="/camera/depth/points_noised" to="/cam3d/depth/points_noised"/>
	  </node-->

 <!-- throttling -->
  <!--node pkg="nodelet" type="nodelet" name="pointcloud_throttle" args="load pointcloud_to_laserscan/CloudThrottle openni_manager" respawn="true">
    <param name="max_rate" value="1.0"/>
    <remap from="cloud_in" to="/cam3d/depth/points"/>
    <remap from="cloud_out" to="/cam3d/depth/points_throttled"/>
  </node-->
	
    <!-- self filter Kinect points -->
    <node pkg="srs_env_model_utils" type="self_filter" respawn="true" name="kinect_self_filter" output="screen">
      <remap from="cloud_in" to="/cam3d/rgb/points_throttled"/>
      <remap from="cloud_out" to="/cam3d/rgb/points_filtered2"/>
      <param name="sensor_frame" type="string" value="/head_cam3d_link"/>
      <param name="subsample_value" type="double" value=".03"/>
      <rosparam command="load" file="$(find cob_manipulation_config)/$(env ROBOT)/self_filter.yaml" />
    </node>
      
    <node pkg="planning_environment" type="environment_server" output="screen" name="environment_server">      
      <param name="use_monitor" type="bool" value="true"/>
      <param name="use_collision_map" type="bool" value="true"/>
      <param name="global_frame" type="string" value="/map"/>
      <remap from="collision_map_occ" to="/but_env_model/collision_map"/>
    </node>
    
    <node pkg="planning_environment" type="planning_scene_validity_server" output="screen" name="planning_scene_validity_server"/>      
  
  
  

    <!-- Run our dynamic scene model server node -->
    <node name="but_server_node" pkg="srs_env_model" type="but_server_node" respawn="true" output="log">
	    
      <!-- Node parameters -->
      <rosparam file="$(find srs_env_model)/config/environment_server_defaults.yaml" command="load"/>
	    
      <remap from="but_server_node/camera_info" to="/cam3d/rgb/camera_info"/>
      <remap from="but_server_node/points_in" to="/cam3d/rgb/points_filtered2"/>
		  
      <!--param name="registration_mode" type="string" value="icpnl"/-->
		  
      <!-- Set 3d camera maximal relevant distance in meters -->
      <param name="ocmap_max_range" type="double" value="4.5"/>

      <!-- Other parameters -->
      <param name="pointcloud_min_z" value="0.2" type="double"/>
      <param name="pointcloud_max_z" value="2.0" type="double" />
      <param name="ocmap_resolution" value="0.05" type="double"/>
      <param name="pointcloud_frame_skip" value="1" type="int"/>
      <param name="collisionmap_frame_id" value="/base_footprint" type="string"/>
		  
    </node>
	
	</group>
	
  <include file="$(find srs_assisted_arm_navigation)/launch/planning_scene_warehouse_viewer_cob3_3_robot.launch" />
  
</launch>

